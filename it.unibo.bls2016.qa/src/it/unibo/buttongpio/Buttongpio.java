/* Generated by AN DISI Unibo */ 
/*
This code is generated only ONCE
*/
package it.unibo.buttongpio;
import java.util.Observable;

import it.unibo.bls.raspberry.components.DeviceButtonPi4J;
import it.unibo.is.interfaces.IObserver;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;

public class Buttongpio extends AbstractButtongpio implements IObserver{ 
	private DeviceButtonPi4J button ; //questo è l'observable -> è il botone fisico
	private int count = 1;
	public Buttongpio(String actorId, QActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
		super(actorId, myCtx, outEnvView);
	}
	
	public void createPi4jButton(int pinNum){
		try {
			button = new DeviceButtonPi4J( "btn", outEnvView , pinNum);
			button.addObserver(this);
		} catch (Exception e) {
 			e.printStackTrace();
		}
	}
	@Override
	public void update(Observable obj, Object arg) {
 		//println("update " + arg + " from " + obj);
 		this.emit("local_click", "clieck(" + count++ +")");
	}
	
}
