/* 
 * ==============================================================
 * radarSystemLogic.qa 
 * ==============================================================
 */   
System radarSystemLogic    
Event obstacle    : p( Distance, Angle  )  
Dispatch polar    : p( Distance, Angle  )  

Context  ctxRadarSystemLogic    ip [ host="localhost"  port=8039 ]     	 
EventHandler evh for obstacle { forwardEvent radarguilogic -m polar  };  //event => dispatch
 
QActor radardevicelogic context ctxRadarSystemLogic  {  	/*( R1 )*/
Rules{
//running at fixed distance  
		p(75,0). p(75,20). p(75,40). p(75,60). p(75,80). p(75,100). p(75,120). p(75,140). p(75,160). p(75,180).
//incoming  
		p(80,0). p(70,20). p(65,40). p(60,60). p(55,80). p(50,100). p(45,120). p(40,140). p(35,160). p(30,180).
//outcoming  / incoming 
		p(40,0). p(45,20). p(50,40). p(55,60). p(50,80). p(45,100). p(40,120). p(35,140).p(30,160). p(25,180).
	} 	
 	Plan init normal      
 		switchToPlan exploreTheSpaceAndDetectObstacles ;	/*( R3, R4 )*/
 		switchToPlan emitTheData   ;
		repeatPlan 29	
	Plan exploreTheSpaceAndDetectObstacles resumeLastPlan	 
		println("Exploring the space ... TODO")
 	Plan emitTheData resumeLastPlan
 		delay time(1000) ;
 		[ ?? p(D, A) ] emit obstacle : p(D,A) 		/*( R5 )*/
}      
/*
 * -----------------------------------------
 * RADAR LOGIC
 * -----------------------------------------
 */  
QActor radarguilogic context ctxRadarSystemLogic {		/*( R2 )*/    
	Plan init normal        
		println("radarlogic STARTS");
		switchToPlan doWorkMsgs
	Plan doWorkMsgs 
  		//println("radarlogic receive") ;                      
		receiveMsg time ( 30000000 )  ; 
		printCurrentMessage ;
  		onMsg polar : p(DIST,THETA) -> 
  			actorOp sendDataToGui( DIST,THETA ) ;  		/*( R6 )*/
  		switchToPlan  doAlarm ;
 		repeatPlan  
	Plan doAlarm resumeLastPlan							/*( R7 )*/
  		onMsg polar : p(DIST,THETA) -> actorOp checkDistance( DIST,THETA ) ; 
 		[ !? actorOpDone(OP,R )] println(xxx(OP,R));
 		[ !? actorOpDone(OP,"near" )] sound time(800) file("./audio/tada2.wav") ;
		[ !? actorOpDone(OP,"proximity" )] sound time(800) file("./audio/any_commander3.wav") 
	
}