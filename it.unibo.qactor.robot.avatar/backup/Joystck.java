/* Generated by AN DISI Unibo */ 
package it.unibo.joystck;
import it.unibo.qactors.ActorContext;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.planned.QActorPlanned;
import it.unibo.qactors.action.AsynchActionResult;
 

public class Joystck extends QActorPlanned{ 
	protected java.util.Hashtable<String, String> guardVars ;
	protected AsynchActionResult aar = null;
	protected boolean actionResult = true;
	protected alice.tuprolog.SolveInfo sol;
	
		public Joystck(String actorId, ActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
			super(actorId, myCtx, "./srcMore/it/unibo/joystck/plans.txt", 
			"./srcMore/it/unibo/joystck/WorldTheory.pl",
			outEnvView , "init");
	 	}
	
		@Override
		protected void doJob() throws Exception {
			boolean res = init();
			//println(getName() + " doJob " + res );
		} 
		/* 
		* ------------------------------------------------------------
		* PLANS
		* ------------------------------------------------------------
		*/
	    public boolean init() throws Exception{	//public to allow reflection
	    	 	try{
	    		 	curPlanInExec =  "init";
	    		 	boolean returnValue = suspendWork;
	    		 	while(true){
	    		 		nPlanIter++;
	    		  		println("+++ joystick receiving ...");
	    		  		//ReceiveMsg
	    		  		 		 aar = receiveAMsg(600000, "" , "" ); 	//could block
	    		  		 		 //println(getName() + " received " + aar.getResult() );
	    		  		printCurrentMessage(true);
	    		  		guardVars = evalTheGuard( "!?repeat( on)" );
	    		  		if( guardVars!= null )
	    		  		{
	    		  		if( repeatPlan(1).getGoon() ) continue;
	    		  		}
	    		 		break;
	    		 	}//while
	    		 	return returnValue;
	    	 	}catch(Exception e){
	    	 		println( getName() + " ERROR " + e.getMessage() );
	    	 		throw e;
	    	 	}
	    }
	    
		/* 
		* ------------------------------------------------------------
		* APPLICATION ACTIONS
		* ------------------------------------------------------------
		*/
		
	  }
	
