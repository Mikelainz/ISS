/* Generated by AN DISI Unibo */ 
package it.unibo.ctxAvatar;
import it.unibo.contactEvent.interfaces.IEventItem;
import it.unibo.contactEvent.platform.EventHandlerComponent;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactor.robot.RobotActor;
import it.unibo.qactors.ActorContext;
import it.unibo.qactors.action.IActionHandler;


public class Usercmdhandler extends EventHandlerComponent { //implements IActionHandler
protected IEventItem event;
	public Usercmdhandler(String name, ActorContext myCtx, IOutputEnvView outEnvView, String[] eventIds ) throws Exception {
		super(name, myCtx, eventIds, outEnvView);
  	}
	@Override
	public void doJob() throws Exception {
		event = getEventItem();
		if( event == null ) return;
showMsg( "---------------------------------------------------------------------" );	
showMsg( event.getPrologRep()  );				 
showMsg( "---------------------------------------------------------------------" );	
		myCtx.getActor("avatar").addRule("stored("+event.getEventId()+","+event.getMsg()+")");
		/*
		 * Execute the command
		 */
		((RobotActor)myCtx.getActor("avatar")).execCmdGui(event.getMsg());
	}
	

/*	
	public String getHandlerName(){
		return getName();
	}
	public void addEventId(String eventId){
		//if not already registred ...
		platform.registerForEvent(getName(), eventId);
	}	
*/
}
